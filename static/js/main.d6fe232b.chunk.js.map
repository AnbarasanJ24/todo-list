{"version":3,"sources":["Components/InputField/inputField.component.jsx","Components/Card/card.component.jsx","Components/CardList/cardList.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","InputField","placeHolder","handleChange","handlClick","currentTodo","classes","noValidate","autoComplete","className","TextField","id","label","variant","size","onChange","onKeyUp","value","Provider","onClick","Card","todo","onDeleteTodo","name","CardList","todos","map","key","App","currentQuote","onInputChange","event","setState","target","Date","now","onAddNewTodo","state","newTodos","localStorage","setItem","JSON","stringify","passedTodo","filteredTodo","filter","allQuotes","a","fetch","response","ok","Error","status","getAllQuotes","then","json","responseAllQuotes","randomNumber","Math","floor","random","this","length","allTodos","parse","getItem","text","author","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6fe232b.chunk.js","sourcesContent":["import { TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { RiBallPenLine } from \"react-icons/ri\";\r\nimport { IconContext } from \"react-icons\";\r\nimport './inputField.styles.css'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"75%\",\r\n    \"font-family\": \"'Caveat', cursive\",\r\n  },\r\n});\r\nexport const InputField = ({ placeHolder, handleChange,handlClick,currentTodo }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <form noValidate autoComplete=\"off\" className=\"input-div\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label={placeHolder}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          classes={{\r\n            root: classes.root,\r\n          }}\r\n          onChange={handleChange}\r\n          onKeyUp={handleChange}\r\n          value={currentTodo}\r\n        />\r\n        <IconContext.Provider value={{ className: \"add-icon\" }}>\r\n          <RiBallPenLine onClick={handlClick} />\r\n        </IconContext.Provider>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport './card.styles.css'\r\nimport { RiDeleteBin7Line } from \"react-icons/ri\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport const Card = ({ todo, onDeleteTodo }) => {\r\n  return (\r\n    <div className=\"todo-card\">\r\n      <h4 className=\"todo-text\">{todo.name}</h4>\r\n      <div>\r\n        <IconContext.Provider value={{ className: \"delete-icon\" }}>\r\n          <RiDeleteBin7Line onClick={() => onDeleteTodo(todo)} />\r\n        </IconContext.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { Card } from \"../Card/card.component\";\r\n// import \"./cardList.styles.css\";\r\n\r\nexport const CardList = ({ todos, onDeleteTodo }) => {\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => (\r\n        <Card onDeleteTodo={onDeleteTodo} todo={todo} key={todo.key} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { InputField } from \"./Components/InputField/inputField.component\";\nimport { CardList } from \"./Components/CardList/cardList.component\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      currentTodo: {\n        name: \"\",\n        key: \"\",\n      },\n      allQuotes: [],\n    };\n  }\n  currentQuote = {};\n  componentDidMount() {\n    async function getAllQuotes() {\n      let response = await fetch(\"https://type.fit/api/quotes\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        return await response;\n      }\n    }\n    getAllQuotes()\n      .then((response) => response.json())\n      .then((responseAllQuotes) => {\n        const randomNumber = Math.floor(Math.random() * 1634 + 1);\n        this.currentQuote = responseAllQuotes[randomNumber];\n      });\n\n    if (this.state.todos.length <= 0) {\n      let state = JSON.parse(localStorage.getItem(\"state\"));\n      let allTodos = state.todos;\n      this.setState({ todos: [...allTodos] });\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      currentTodo: {\n        name: event.target.value,\n        key: Date.now(),\n      },\n    });\n  };\n\n  onAddNewTodo = (event) => {\n    const { currentTodo } = this.state;\n    if (currentTodo.name !== \"\") {\n      const newTodos = [...this.state.todos, currentTodo];\n      this.setState({\n        todos: newTodos,\n        currentTodo: {\n          name: \"\",\n          key: \"\",\n        },\n      }, () => {localStorage.setItem(\"state\", JSON.stringify(this.state));});\n    }\n  };\n\n  onDeleteTodo = (passedTodo) => {\n    let filteredTodo = this.state.todos.filter(\n      (todo) => todo.name !== passedTodo.name\n    );\n    this.setState({\n      todos: filteredTodo,\n    }, ()=> {localStorage.setItem(\"state\", JSON.stringify(this.state));});\n  };\n\n  render() {\n    const { todos: allTodos, currentTodo } = this.state;\n    return (\n      <main className=\"main-todo-list\">\n        <div className=\"title-div\">\n          <h1 className=\"title\">Whats the plan for today?</h1>\n        </div>\n        <section className=\"parent-section\">\n          <section className=\"section-todo-list\">\n            <InputField\n              placeHolder=\"Add Todo\"\n              currentTodo={currentTodo.name}\n              handleChange={this.onInputChange}\n              handlClick={this.onAddNewTodo}\n            />\n            <CardList todos={allTodos} onDeleteTodo={this.onDeleteTodo} />\n          </section>\n        </section>\n        <footer className=\"dailyQuotes\">\n          <div className=\"dailyQuotesCard\">\n            <h5 className=\"quote\">\n              {this.currentQuote?.text || \"Quotes\"}\n              <div className=\"author\">{this.currentQuote?.author}</div>\n            </h5>\n          </div>\n        </footer>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}